Tujuan aplikasi

apply_me! adalah aplikasi desktop untuk mentracking semua lamaran kerja Anda: perusahaan, posisi, tanggal apply, status, catatan interview, dokumen yang dikirim, follow-up, dan hasil akhir. Tujuannya: bikin proses pencarian kerja teratur, mudah dilacak, dan bisa dievaluasi.

Persona pengguna
Pencari kerja aktif — melamar ke banyak posisi, butuh riwayat dan pengingat.
Freelance / career changer — perlu menyimpan portofolio yang pernah dikirimkan.
HR consultant / job coach — bisa membantu klien dengan riwayat lamaran.

Fitur inti (MVP)
Tambah / Edit / Hapus lamaran (company, posisi, lokasi, tanggal apply).
Status tracking (Applied, Phone Screen, Interview, Offer, Rejected, Withdrawn).
Timeline / History — log kronologis perubahan status & interaksi.
Attach files — simpan resume versi tertentu, cover letter, screenshot email.
Search & Filter — cari berdasarkan perusahaan, posisi, status, tanggal.
Export / Backup — ekspor CSV / export database untuk backup.

Fitur lanjutan (opsional)
Sinkronisasi cloud (Google Drive / Dropbox) atau backup otomatis.
Integrasi kalender (Google Calendar) untuk interview.
Statistik & dashboard: jumlah apply / minggu, rasio interview / offer, average response time.
Multiple profiles (mis. track untuk beberapa akun/genre pekerjaan).
Import dari LinkedIn/CSV (scraping/import file).
Dark mode + theme switcher.

Struktur data (contoh skema SQLite)

Tabel utamanya cukup ringkas:
A. applications
id (INT PK)
company_name (TEXT)
position (TEXT)
location (TEXT)
date_applied (DATE)
source (TEXT) — job board / referral / company site
status(TEXT) — enum
salary_expectation (TEXT)
notes (TEXT)
resume_file (TEXT) — path
cover_letter_file (TEXT) — path
created_at (DATETIME)
updated_at (DATETIME)

B. status_history
id
application_id (FK applications.id)
old_status
new_status
timestamp
comment
contacts
id
application_id
name
role
email
phone
notes

C. reminders
id
application_id
remind_at (DATETIME)
message
done (BOOLEAN)

Wireframe & layar UI (komponen PySide6 yang relevan)

Saya jelaskan tiap layar + widget PySide6 yang bisa dipakai:
Main / Dashboard
    Toolbar (QToolBar) — tombol Add, Import, Export, Settings.
    Search bar (QLineEdit) + Filter dropdown (QComboBox).
    Left pane: Filter/status list (QListWidget) — mis. All / Applied / Interview / Offer.
    Center: Table of applications (QTableView) — menampilkan rows; sortable.
    Right: Quick detail panel (QGroupBox) — preview selected application (QLabel, QTextEdit, PushButtons).

Form Tambah / Edit Lamaran
    QDialog atau QMainWindow dengan form fields (QLineEdit, QDateEdit, QTextEdit, QComboBox).
    Attach file: QFileDialog untuk pilih file, show filename di QLabel.
    Save / Cancel buttons (QPushButton).

Detail Application (Full view)
    Tabs (QTabWidget): Overview, Timeline (QListView), Contacts, Files.
    Timeline: daftar status_history dengan timestamp.
    Action buttons: Change Status dropdown + Confirm (QComboBox + QPushButton).

Statistics / Analytics
    Grafik sederhana: matplotlib atau QtCharts (embedded) untuk bar / pie chart.
    KPI cards: total applied, interviews, offers, response rate.
Settings
    Backup & restore path, theme choice, auto-backup toggle.

Alur pengguna (user flow)
    Buka app → otomatis load data lokal.
    Klik Add → isi company, position, date → Save.
    Di main table, klik row → lihat detail di panel kanan.
    Ganti status via dropdown → otomatis create entry di status_history.
    Attach resume / cover letter → file dicopy ke folder assets/files/<app_id>/.
    Export CSV untuk laporan atau backup database.

Rekomendasi teknis
    GUI: PySide6 (sudah dipilih). Gunakan Qt Designer untuk UI, konversi .ui ke Python.
    Database: SQLite (ringan, lokal). Gunakan ORM seperti SQLAlchemy atau Peewee untuk kemudahan.
    File storage: Simpan file di folder aplikasi (mis. %APPDATA%/apply_me! di Windows) dan simpan path di DB.
    Packaging: PyInstaller (Windows .exe), pyinstaller --onefile --add-data "assets;assets" main.py.
    Testing: unittest/pytest untuk logika; manual UI tests untuk alur CRUD.
    Style: QSS + QDarkStyle untuk tema modern; pertimbangkan library Fluent-style bila mau tampilan Windows 11.
    Backup: Sediakan export/import DB + CSV.


Contoh snippet QSS untuk tombol modern
QPushButton {
    border-radius: 8px;
    padding: 6px 12px;
    background-color: #2e86de;
    color: white;
}
QPushButton:hover {
    background-color: #54a0ff;
}



apply_me/
│
├── main.py                       # Entry point aplikasi
│
├── app/
│   ├── __init__.py
│   ├── main_window.py            # Window utama + dashboard logic
│   ├── add_dialog.py             # Form Tambah/Edit Lamaran
│   ├── database.py               # Setup SQLite + koneksi ORM
│   ├── models.py                 # ORM models (SQLAlchemy / Peewee)
│   ├── utils.py                  # Helper (export CSV, reminder utils)
│   └── themes/                   # QSS dan tema tambahan
│
├── assets/
│   ├── icons/                    # Ikon aplikasi
│   └── files/                    # Folder penyimpanan file user
│
└── data/
    └── apply_me.db               # Database lokal


7. Alur Pengguna (User Flow)
Buka aplikasi → load database lokal otomatis.
Klik “Add Application” → isi form → Save.
Tabel utama menampilkan seluruh lamaran.
Klik satu baris → panel kanan menampilkan detail cepat.
Ganti status → otomatis tercatat di status_history.
Attach file → file disalin ke assets/files/<app_id>/.
Export CSV / Backup DB untuk laporan atau cadangan.

8. Statistik / Analytics (Opsional)
Gunakan QtCharts atau matplotlib untuk menampilkan:
Jumlah lamaran per minggu/bulan
Rasio interview vs offer
Rata-rata waktu tanggapan
Persentase status aktif


Sprint 1 - 1 week:	CRUD dasar + SQLite + UI Main & Form
Sprint 2 - 3 days:	Attach file + Status history + Search & Filter
Sprint 3 - 5 days:	Export CSV + Statistik dasar
Sprint 4 - 1 week 2 days: 	Reminder + Settings + Theming + Packaging

13. Ide Micro-UX (NEW UPDATE)!
Saat status berubah → tampilkan mini-dialog konfirmasi / tambah komentar.
Saat tambah lamaran → auto-reminder 7 hari setelah apply.
Saat attach file → tampilkan thumbnail / nama file + ukuran.
Tooltip ringan di tiap tombol toolbar.

